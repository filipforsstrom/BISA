// <auto-generated />
using System;
using BISA.Server.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BISA.Server.Migrations
{
    [DbContext(typeof(BisaDbContext))]
    partial class BisaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BISA.Shared.Entities.EventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Staffan läser från sin bok 'Den vilda naturen'.",
                            EventTypeId = 1,
                            Location = "Malmö",
                            Organizer = "Läsklubben",
                            Subject = "Exotiska djur och växter"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fora besöker vårt bibliotek för en Österrikisk musikresa bakåt i tiden",
                            EventTypeId = 2,
                            Location = "Tranås",
                            Organizer = "Fora",
                            Subject = "Klassisk musik"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Malmös musik community samlar in pengar till förmån för utsatta människor i Yemen",
                            EventTypeId = 3,
                            Location = "Folkets Park Malmö",
                            Organizer = "Röda Korset",
                            Subject = "Kriget i Yemen"
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.EventTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 500,
                            Description = "Barnaktivitet",
                            Image = "högläsning.img",
                            Type = "Högläsning för barn"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 300,
                            Description = "Musikevenemang",
                            Image = "musik.img",
                            Type = "Konsert"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 500,
                            Description = "Insamlimg",
                            Image = "insamling.img",
                            Type = "Välgörenhet"
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Type").HasValue("ItemEntity");
                });

            modelBuilder.Entity("BISA.Shared.Entities.ItemInventoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemInventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = false,
                            ItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            Available = false,
                            ItemId = 1
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            ItemId = 2
                        },
                        new
                        {
                            Id = 4,
                            Available = false,
                            ItemId = 2
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            ItemId = 3
                        },
                        new
                        {
                            Id = 6,
                            Available = false,
                            ItemId = 3
                        },
                        new
                        {
                            Id = 7,
                            Available = true,
                            ItemId = 5
                        },
                        new
                        {
                            Id = 10,
                            Available = true,
                            ItemId = 5
                        },
                        new
                        {
                            Id = 11,
                            Available = true,
                            ItemId = 4
                        },
                        new
                        {
                            Id = 12,
                            Available = true,
                            ItemId = 4
                        },
                        new
                        {
                            Id = 13,
                            Available = true,
                            ItemId = 6
                        },
                        new
                        {
                            Id = 14,
                            Available = false,
                            ItemId = 6
                        },
                        new
                        {
                            Id = 15,
                            Available = false,
                            ItemId = 7
                        },
                        new
                        {
                            Id = 16,
                            Available = true,
                            ItemId = 8
                        },
                        new
                        {
                            Id = 17,
                            Available = true,
                            ItemId = 8
                        },
                        new
                        {
                            Id = 18,
                            Available = false,
                            ItemId = 9
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.ItemTagEntity", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ItemTags");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            TagId = 5
                        },
                        new
                        {
                            ItemId = 1,
                            TagId = 3
                        },
                        new
                        {
                            ItemId = 2,
                            TagId = 1
                        },
                        new
                        {
                            ItemId = 2,
                            TagId = 4
                        },
                        new
                        {
                            ItemId = 5,
                            TagId = 5
                        },
                        new
                        {
                            ItemId = 3,
                            TagId = 5
                        },
                        new
                        {
                            ItemId = 4,
                            TagId = 3
                        },
                        new
                        {
                            ItemId = 5,
                            TagId = 1
                        },
                        new
                        {
                            ItemId = 6,
                            TagId = 2
                        },
                        new
                        {
                            ItemId = 7,
                            TagId = 2
                        },
                        new
                        {
                            ItemId = 8,
                            TagId = 6
                        },
                        new
                        {
                            ItemId = 9,
                            TagId = 5
                        },
                        new
                        {
                            ItemId = 10,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.LoanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date_From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_To")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemInventoryId");

                    b.HasIndex("UserId");

                    b.ToTable("LoansActive");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(229),
                            Date_To = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(264),
                            ItemInventoryId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(267),
                            Date_To = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(268),
                            ItemInventoryId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 3,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(270),
                            Date_To = new DateTime(2022, 6, 7, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(271),
                            ItemInventoryId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(273),
                            Date_To = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(274),
                            ItemInventoryId = 6,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(276),
                            Date_To = new DateTime(2022, 6, 7, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(277),
                            ItemInventoryId = 18,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(279),
                            Date_To = new DateTime(2022, 6, 7, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(280),
                            ItemInventoryId = 15,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(283),
                            Date_To = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(284),
                            ItemInventoryId = 14,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.LoanHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date_From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_To")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemInventoryId");

                    b.HasIndex("UserId");

                    b.ToTable("LoanHistory");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Date_From = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2021, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Date_From = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2021, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Date_From = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2021, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Date_From = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2021, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 6,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Date_From = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2021, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Date_From = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2022, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            Date_From = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2022, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 6,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            Date_From = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date_To = new DateTime(2022, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemInventoryId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.LoanReservationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date_From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_To")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("LoanReservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(318),
                            Date_To = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(320),
                            ItemId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(323),
                            Date_To = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(324),
                            ItemId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            Date_From = new DateTime(2022, 5, 31, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(326),
                            Date_To = new DateTime(2022, 6, 7, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(327),
                            ItemId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date_From = new DateTime(2022, 6, 20, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(328),
                            Date_To = new DateTime(2022, 6, 27, 14, 8, 17, 611, DateTimeKind.Local).AddTicks(330),
                            ItemId = 9,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tag = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Tag = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Tag = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Tag = "Romance"
                        },
                        new
                        {
                            Id = 5,
                            Tag = "Drama"
                        },
                        new
                        {
                            Id = 6,
                            Tag = "Fantasy"
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jaff@gmail.com",
                            Firstname = "Jeffrey",
                            Lastname = "Anderson",
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e6",
                            Username = "jaff"
                        },
                        new
                        {
                            Id = 2,
                            Email = "micke@gmail.com",
                            Firstname = "Mikael",
                            Lastname = "Kinder",
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e7",
                            Username = "micke"
                        },
                        new
                        {
                            Id = 3,
                            Email = "junne@gmail.com",
                            Firstname = "Kalle",
                            Lastname = "Ljungberg",
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e8",
                            Username = "junne"
                        },
                        new
                        {
                            Id = 4,
                            Email = "admin@gmail.com",
                            Firstname = "Ralf",
                            Lastname = "Gyllenhammarströmfors",
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 5,
                            Email = "alex@hotmail.com",
                            Firstname = "Alex",
                            Lastname = "Urtti",
                            UserId = "5a389f27-9fc1-4505-b779-ccb3020af009",
                            Username = "alexurtti"
                        },
                        new
                        {
                            Id = 6,
                            Email = "bosse@hotmail.com",
                            Firstname = "Boris",
                            Lastname = "Kogen",
                            UserId = "c11686e5-daaa-4d0d-91de-cdcd6c618bbc",
                            Username = "bosse"
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.BookEntity", b =>
                {
                    b.HasBaseType("BISA.Shared.Entities.ItemEntity");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creator = "Selma Lagerlöf",
                            Date = "2017",
                            Description = "Gösta Berlings saga är en mustig skröna från författarinnans älskade Värmland, präglad av både burlesk humor och djupt allvar. Genom hela berättelsen löper en vemodig insikt om människans otillräcklighet och kärlekens förgänglighet.",
                            Image = "gösta.img",
                            Language = "Swedish",
                            Publisher = "Bonnier",
                            Title = "Gösta Berlings Saga",
                            ISBN = "9789174296051"
                        },
                        new
                        {
                            Id = 3,
                            Creator = "John Steinbeck",
                            Date = "2010",
                            Description = "1930-tal och depression i USA. När Tom Joad återvänder efter fyra år i fängelset finner han att hans familj vräkts från gården. De svåra tiderna tvingar familjen att packa allt de äger i sin skraltiga bil och ge sig av till Kalifornien. Dit har de lockats av löften om jobb på bomullsfällt och persikoplantager, men drömmen om ett bättre liv finns bara i reklambladen.",
                            Image = "grapes.img",
                            Language = "English",
                            Publisher = "Bonnier",
                            Title = "Vredens Druvor",
                            ISBN = "9789174290899"
                        },
                        new
                        {
                            Id = 4,
                            Creator = "Fjodor Dostojevskij",
                            Date = "2012",
                            Description = "Myskin, just hemkommen från en sjukdomsvistelse i Schweiz, kastas in i Petersburgs socitetsliv. Där förälskar han sig i Natasia och Aglaja - två av världslitteraturens mest fascinerande kvinnogestalter. Inför öppen ridå utspelas fruktansvärda tragedier, groteska farser och erotiska dramer.",
                            Image = "idioten.img",
                            Language = "English",
                            Publisher = "Bonnier",
                            Title = "Idioten",
                            ISBN = "9789174292312"
                        },
                        new
                        {
                            Id = 6,
                            Creator = "George Orwell",
                            Date = "2012",
                            Description = "Om den ständigt pågående striden mellan de tre staterna Eurasien, Ostasien och Oceanien. Kriget upphör aldrig men konstellationerna ändras fortlöpande. Via den ständigt vakande teleskärmen hålls invånarna uppdaterade om vem som är fienden för dagen.",
                            Image = "1984.img",
                            Language = "Swedish",
                            Publisher = "Atlantis",
                            Title = "1984 ",
                            ISBN = "9789173539678"
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.EbookEntity", b =>
                {
                    b.HasBaseType("BISA.Shared.Entities.ItemEntity");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Ebook");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Creator = "Delia Owens",
                            Date = "2020",
                            Description = "En oförglömlig berättelse om naturens krafter och ensamhetens pris. Kya Clark lever ensam och i samspel med naturen utanför en liten stad vid North Carolinas kust. Byborna kallar henne ”Träskflickan” och har i många år spridit elaka rykten om henne. När en stilig quarterback hittas död i våtmarken blir hon därför omedelbart misstänkt och en mordutredning inleds.",
                            Image = "kräftorna.img",
                            Language = "English",
                            Publisher = "Forum",
                            Title = "Där kräftorna sjunger",
                            Url = "https://www.google.se/search?q=d%C3%A4r+kr%C3%A4ftorna+sjunger&sxsrf=ALiCzsaMhrSQdBmKgyD85ZVFaiyPKNOjlQ%3A1653903280127&source=hp&ei=sI-UYozUBMiNlwT1hKiICg&iflsig=AJiK0e8AAAAAYpSdwKIRvLdVFgXTygs6wpQYl937TDZR&gs_ssp=eJzj4tVP1zc0zDCoTI5PjjcxYPQSTzm8pEghu-jwkrSS_KK8RIXirNK89NQiABhRDuM&oq=d%C3%A4r&gs_lcp=Cgdnd3Mtd2l6EAMYADIECC4QQzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEMgUILhCABDIFCAAQgAQyBQgAEIAEMgUIABCABDoECCMQJzoGCCMQJxATOgQIABBDOgsILhCABBDHARCjAlAAWKkDYPUQaABwAHgAgAGRAYgB-QKSAQMwLjOYAQCgAQE&sclient=gws-wiz"
                        },
                        new
                        {
                            Id = 8,
                            Creator = "J.R.R. Tolkien",
                            Date = "2019",
                            Description = "Den lille hobbiten Bilbo Secker dras av trollkarlen Gandalf grå med på äventyr tillsammans med tretton dvärgar, ledda av den sturske Thorin Ekensköld. De ska röva bort en stor guldskatt som vaktas av den eldsprutande draken Smaug.",
                            Image = "hobbiten.img",
                            Language = "English",
                            Publisher = "Norstedts",
                            Title = "Hobbiten",
                            Url = "https://www.google.com/search?q=hobbiten&oq=hobbiten&aqs=chrome..69i57j46i512j0i512l4j69i60l2.1518j0j4&sourceid=chrome&ie=UTF-8"
                        },
                        new
                        {
                            Id = 9,
                            Creator = "Vilhelm Moberg",
                            Date = "2013",
                            Description = "Utvandrarna är den första delen om Kristina, Karl Oskar, Robert, Arvid och alla andra i Ljuder socken som lämnar fattig-Sverige för ett drägligare liv i USA. Efter många svältår och andra umbärande bestämmer de sig för att emigrera till Amerika och en strapatsrik resa tar sin början.",
                            Image = "utvandrarna.img",
                            Language = "Swedish",
                            Publisher = "Bonnier",
                            Title = "Utvandrarna ",
                            Url = "https://www.google.com/search?q=utvandrarna+bok&oq=utvandrarna+bok&aqs=chrome..69i57j46i67j0i512l2j46i512j0i512l2j69i60.4872j0j4&sourceid=chrome&ie=UTF-8"
                        },
                        new
                        {
                            Id = 10,
                            Creator = "Vilhelm Moberg",
                            Date = "2013",
                            Description = "När Karl Oskar och Kristina kommer fram till New York möter de ett land som tar emot dem med öppna armar. Och omgående börjar de den långa färden till Minnesota, där de ska bygga sitt nya hem. Som sällskap har de sina reskamrater från Ljuder socken och de blir också en stor trygghet.",
                            Image = "invandrarna.img",
                            Language = "Swedish",
                            Publisher = "Bonnier",
                            Title = "Invandrarna ",
                            Url = "https://www.google.com/search?q=invandrarna&oq=invandrarna&aqs=chrome..69i57j46i512l2j0i512j46i512j0i512l2j69i60.6485j0j4&sourceid=chrome&ie=UTF-8"
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.MovieEntity", b =>
                {
                    b.HasBaseType("BISA.Shared.Entities.ItemEntity");

                    b.Property<int>("RuntimeInMinutes")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Movie");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Creator = "Tony Scott",
                            Date = "1986",
                            Description = "Tom Cruise briljerar i rollen som Maverick, en ung och självsäker stridspilot som älskar fart, har mycket att bevisa och än mer att lära. Actionpackat!",
                            Image = "topgun.img",
                            Language = "English",
                            Publisher = "Warner Brothers",
                            Title = "Top Gun",
                            RuntimeInMinutes = 121
                        },
                        new
                        {
                            Id = 7,
                            Creator = "Joel Schumacher",
                            Date = "1989",
                            Description = "Två bröder flyttar till en ny stad och hamnar snart i fel gäng. Inget ovanligt med det, förutom att just dessa no-mark-punkare råkar vara blodsvällande vampyrer. Actionpackat klassiker!",
                            Image = "lostboys.img",
                            Language = "English",
                            Publisher = "Fox",
                            Title = "The Lost Boys",
                            RuntimeInMinutes = 94
                        });
                });

            modelBuilder.Entity("BISA.Shared.Entities.EventEntity", b =>
                {
                    b.HasOne("BISA.Shared.Entities.EventTypeEntity", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("BISA.Shared.Entities.ItemInventoryEntity", b =>
                {
                    b.HasOne("BISA.Shared.Entities.ItemEntity", "Item")
                        .WithMany("ItemInventory")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("BISA.Shared.Entities.ItemTagEntity", b =>
                {
                    b.HasOne("BISA.Shared.Entities.ItemEntity", "Item")
                        .WithMany("ItemTags")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BISA.Shared.Entities.TagEntity", "Tag")
                        .WithMany("ItemTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BISA.Shared.Entities.LoanEntity", b =>
                {
                    b.HasOne("BISA.Shared.Entities.ItemInventoryEntity", "ItemInventory")
                        .WithMany()
                        .HasForeignKey("ItemInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BISA.Shared.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemInventory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BISA.Shared.Entities.LoanHistoryEntity", b =>
                {
                    b.HasOne("BISA.Shared.Entities.ItemInventoryEntity", "ItemInventory")
                        .WithMany()
                        .HasForeignKey("ItemInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BISA.Shared.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemInventory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BISA.Shared.Entities.LoanReservationEntity", b =>
                {
                    b.HasOne("BISA.Shared.Entities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BISA.Shared.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BISA.Shared.Entities.ItemEntity", b =>
                {
                    b.Navigation("ItemInventory");

                    b.Navigation("ItemTags");
                });

            modelBuilder.Entity("BISA.Shared.Entities.TagEntity", b =>
                {
                    b.Navigation("ItemTags");
                });
#pragma warning restore 612, 618
        }
    }
}
