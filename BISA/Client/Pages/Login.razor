@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<EditForm Model="User" OnValidSubmit="logInUser">
    <DataAnnotationsValidator />
    <MudCard>
        <MudText Align="Align.Center" Typo="Typo.h3">Login</MudText>
        <MudCardContent>
        <MudTextField Label="User Name" @bind-Value="User.Username"
                      For="(()=> User.Username)"></MudTextField>
        <MudTextField Label="Password" Class="mt-3" @bind-Value="User.Password"
                      For="(()=> User.Password)" InputType="InputType.Password"></MudTextField>
        </MudCardContent>
        <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Info" Class="ml-auto">Log in</MudButton>
        </MudCardActions>
        <MudLink Href="/register" Typo="Typo.body2" Class="ml-2">Not a member? Register here</MudLink>
    </MudCard>
    
</EditForm>

@code {
    private UserLoginViewModel User { get; set; } = new();

    private async void logInUser()
    {
        var response = await AuthService.Login(User);

        if (response.Success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Snackbar.Add($"{response.Message}", Severity.Error, config => { config.ShowCloseIcon = false; });
        }
    }
}
