@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager



<EditForm Model="RegistratedUser" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    
    <MudCard >
        <MudText Align="Align.Center" Typo="Typo.h3">Register</MudText>
        <MudCardContent>
        <MudTextField Label="First Name" @bind-Value="RegistratedUser.FirstName"
                      For="(()=> RegistratedUser.FirstName)"></MudTextField>
        <MudTextField Label="Last Name" @bind-Value="RegistratedUser.LastName"
                      For="(()=> RegistratedUser.LastName)"></MudTextField>
        <MudTextField Label="User Name" @bind-Value="RegistratedUser.Username"
                      For="(()=> RegistratedUser.Username)"></MudTextField>
        <MudTextField Label="Email" @bind-Value="RegistratedUser.Email"
                      For="(()=> RegistratedUser.Email)"></MudTextField>
        <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3" @bind-Value="RegistratedUser.Password"
                      For="(()=> RegistratedUser.Password)" InputType="InputType.Password"></MudTextField>
        <MudTextField Label="Password" HelperText="Repeat your password" Class="mt-3" @bind-Value="RegistratedUser.ValidatePassword"
                      For="(()=> RegistratedUser.ValidatePassword)"InputType="InputType.Password"></MudTextField>
        </MudCardContent>
        <MudCardActions>
                <MudLink Href="#" Typo="Typo.body2" Class="ml-2">Home page</MudLink>
                <MudButton ButtonType="ButtonType.Submit"  Variant="Variant.Filled" Color="Color.Info" Class="ml-auto">Register</MudButton>
        </MudCardActions>
    </MudCard>
    
</EditForm>
<MudText Align="Align.Center" Color="Color.Error" Typo="Typo.h6">@messageToUser</MudText>






@code {
    private UserRegisterViewModel RegistratedUser { get; set; } = new();
    string? messageToUser;



    private async Task RegisterUser()
    {
        var response = await AuthService.Register(RegistratedUser);

        if(response.Success)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            messageToUser = response.Message;
            StateHasChanged();
        }
    }


}
